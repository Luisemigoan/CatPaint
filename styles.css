* {
    box-sizing: border-box;
}

body {
    background-color: #c9d2fc;
}

.cat-head {
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    width: 205px;
    height: 180px;
    border: 1px solid #000;
    border-radius: 46%;
    background: linear-gradient(to bottom, #5e5e5e 85%, #45454f 100%); 
}

/*El posicionamiento CSS te permite establecer cómo quieres posicionar un elemento en el navegador. Tiene una propiedad position a la que puedes dar un valor static, absolute, relative, sticky o fixed.

Una vez que estableces la propiedad position del elemento, puedes mover éste indicando un píxel o un valor porcentual para una o más de las propiedades top, right, left o bottom.

static es la posición predeterminada para todos los elementos. Si la asignas a un elemento, no podrás moverlo con top, right, left, o bottom.*/

/*Cuando usas el valor relative, el elemento todavía está posicionado acorde con el flujo normal del documento, pero los valores top, left, bottom, y right se activan.*/

/*La siguiente propiedad de posición es absolute. Cuando usas el valor absolute para tu propiedad position, el elemento se saca del flujo normal del documento, y luego su posición es determinada por las propiedades top, right, bottom, y left.*/

/*fixed es un valor de la propiedad position que te permite hacer un elemento fijado a la página sin importar dónde el usuario se desplace en la página.*/

/*El último valor de la propiedad de posición es sticky. El posicionamiento sticky es un híbrido de los posicionamientos relative y fixed. Permite a un elemento pegarse a una posición específica dentro de su elemento contenedor o ventana, basada en la posición del desplazamiento.*/

/*Ahora aprenderás un truco CSS para dibujar triángulos.

Se utilizará para dibujar las orejas del gato.

Mediante un selector de clase, asigna al elemento .cat-right-ear las propiedades height y width establecidas en 100px. Establece el background-color a white. Establece los bordes izquierdo y derecho en 35px solid blue. Establece los bordes superior e inferior en 35px solid red.*/

/*.cat-right-ear {
    height: 100px;
    width: 100px;
    background-color: white;
    border-left: 35px solid blue;
    border-right: 35px solid blue;
    border-top: 35px solid red;
    border-bottom: 35px solid red;
}*/

/*Observa que ahora tienes un cuadrado blanco con bordes gruesos. Los bordes tienen esquinas diagonales que pueden utilizarse para crear triángulos.

Dentro del mismo selector de clase ajusta la height y la width a 0. Establece los bordes i, derecho y superior como transparent.

Elimina la propiedad background-color, y debes ver un triángulo.*/

/*.cat-right-ear {
    height: 0px;
    width: 0px;
    border-left: 35px solid transparent;
    border-right: 35px solid transparent;
    border-top: 35px solid transparent;
    border-bottom: 35px solid red;
}
*/

.cat-left-ear {
    position: absolute;
    top: -26px;
    left: -31px;
    z-index: 1;
    border-top-left-radius: 90px;
    border-top-right-radius: 10px;
    transform: rotate(-45deg);
    border-left: 35px solid transparent;
    border-right: 35px solid transparent;
    border-bottom: 70px solid #5e5e5e;
}

/*Para posicionar la oreja izquierda adecuadamente, puedes utilizar CSS transform para rotarla en cierto grado.

La propiedad transform te permite modificar la forma, posición, y tamaño de un elemento sin cambiar el diseño o afectar a los elementos en su alrededor. Posee funciones como translate(), rotate(), scale(), skew(), y matrix().*/

.cat-right-ear {
    position: absolute;
    top: -26px;
    left: 163px;
    z-index: 1;
    border-top-left-radius: 10px;
    border-top-right-radius: 90px;
    transform: rotate(45deg);
    border-left: 35px solid transparent;
    border-right: 35px solid transparent;
    border-bottom: 70px solid #5e5e5e;
}

/*z-index es una propiedad que puedes usar para definir el orden de la superposición de elementos HTML. Cualquier elemento con un z-index mayor siempre será colocado sobre un elemento con un z-index menor.*/

.cat-left-inner-ear {
    position: absolute;
    top: 22px;
    left: -20px;
    border-top-left-radius: 90px;
    border-top-right-radius: 10px;
    border-bottom-left-radius: 40%;
    border-bottom-right-radius: 40%;
    border-left: 20px solid transparent;
    border-right: 20px solid transparent;
    border-bottom: 40px solid #3b3b4f;
}

.cat-right-inner-ear {
    position: absolute;
    top: 22px;
    left: -20px;
    border-top-left-radius: 90px;
    border-top-right-radius: 10px;
    border-bottom-left-radius: 40%;
    border-bottom-right-radius: 40%;
    border-left: 20px solid transparent;
    border-right: 20px solid transparent;
    border-bottom: 40px solid #3b3b4f;
}

.cat-left-eye {
    position: absolute;
    top: 54px;
    left: 39px;
    border-radius: 60%;
    transform: rotate(25deg);
    width: 30px;
    height: 40px;
    background-color: #000;
}

.cat-right-eye {
    position: absolute;
    top: 54px;
    left:134px;
    border-radius: 60%;
    transform: rotate(-25deg);
    width: 30px;
    height: 40px;
    background-color: #000;
}

.cat-left-inner-eye {
    position: absolute;
    top: 8px;
    left: 2px;
    border-radius: 60%;
    transform: rotate(10deg);
    width: 10px;
    height: 20px;
    background-color: #fff;
}

.cat-right-inner-eye {
    position: absolute;
    top: 8px;
    left: 18px;
    border-radius: 60%;
    transform: rotate(-5deg);
    width: 10px;
    height: 20px;
    background-color: #fff;
}